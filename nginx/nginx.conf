worker_processes 4;

events { worker_connections 1024; }

http {
    # Act as Load Balancer for 4 nodes
    upstream core-app.local {
        server dockernginxkestrel_core-app_1:80;
        #server dockernginxkestrel_core-app_2:80;
        #server dockernginxkestrel_core-app_3:80;
        #server dockernginxkestrel_core-app_4:80;
    }

    # Redirect all HTTP traffic to HTTPS
    # server {
    #   listen 80;
    #   return 301 https://$host$request_uri;
    # }
        
server {
    if ($host = smhis2.canadacentral.cloudapp.azure.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


	listen 80 ;
	listen [::]:80 ;
    server_name smhis2.canadacentral.cloudapp.azure.com;
    return 404; # managed by Certbot


}


server {


	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;
    server_name smhis2.canadacentral.cloudapp.azure.com; # managed by Certbot


	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/smhis2.canadacentral.cloudapp.azure.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/smhis2.canadacentral.cloudapp.azure.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
    # HTTPS Server
    server {
        listen 443;
        # Server name. You need a DNS record (or add this hostname to your hosts file)
        server_name core-app.local;
        #server_name dev-svr.eastus.cloudapp.azure.com;
        # Digital certificates generated with makecert.sh / makecert.bat
        ssl_certificate           /etc/nginx/server.crt;
        ssl_certificate_key       /etc/nginx/server.key;

        # SSL configuration
        ssl on;
        ssl_session_cache  builtin:1000  shared:SSL:10m;
        ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
        ssl_prefer_server_ciphers on;
        location /sample/ {
             proxy_pass         http://core-app.local/;
             proxy_http_version 1.1;
             proxy_set_header   Upgrade $http_upgrade;
             proxy_set_header   Connection keep-alive;
             proxy_set_header   Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            sub_filter 'action="/'  'action="/sample/';
                     sub_filter 'href="/'  'href="/sample/';
                    sub_filter 'src="/'  'src="/sample/';
                     sub_filter_once off;      
        }
        #Location configuration to use the core-app.local upstream defined before
        # location /sample/ {
        #     proxy_pass          http://core-app.local/;
        #     proxy_http_version 1.1;
        #     proxy_set_header   Upgrade $http_upgrade;
        #     proxy_read_timeout  90;
        #     proxy_set_header        Host $host/sample/;
        #     proxy_set_header        X-Real-IP $remote_addr;
        #     proxy_set_header        X-Scheme $scheme;
        #     proxy_cache_bypass $http_upgrade;
        #     proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header        X-Forwarded-Proto $scheme;       
        #     #proxy_redirect    off;
        #     proxy_redirect      http://localhost https://core-app.local;
        #      sub_filter 'action="/'  'action="/sample/';
        #             sub_filter 'href="/'  'href="/sample/';
        #             sub_filter 'src="/'  'src="/sample/';
        #             sub_filter_once off;            
        # }
        # location /app1/ {
        #             proxy_set_header Host $http_host/app1;
        #             proxy_set_header X-Real-IP $remote_addr;
        #             proxy_set_header X-Scheme $scheme;
        #             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #             proxy_set_header X-Forwarded-Proto $scheme;
        #             proxy_redirect    off;
        #             add_header Pragma "no-cache";
        #             add_header Cache-Control "no-cache";
        #             proxy_pass http://core-app.local/;
        #             sub_filter 'action="/'  'action="/app1/';
        #             sub_filter 'href="/'  'href="/app1/';
        #             sub_filter 'src="/'  'src="/app1/';
        #             sub_filter_once off;
        #     }
    }
}